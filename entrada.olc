inicio
Ingresar _variable1_      coMo NumEro cOn_valor 5;
Ingresar variable1_      coMo cadena cOn_valor "HOLA MI REY XD";
imprimir("holaMudno")
fin


INICIO
imprimir("holaMudno")
FIN 
/////inicio de la traduccion

/*
        Primer archivo de entrada para proyecto organizacion de lenguajes y compiladores 1
*/
//josue123 + dan______ +5

//seccion de declraciones  de variables
//Ingresar _variable1_      coMo NumEro cOn_valor 5;
//Ingresar variable1_      coMo NumEro cOn_valor 5;
//Ingresar variable1_      coMo cadena cOn_valor "HOLA MI REY XD";

inicio
ingresaR _v1_, _v2_, _v3_ cOmo CadenA con_vAlor "esta es una cadena";
ingresaR _curso1_         cOmo cadena con_vAlor "olc";
ingresaR _curso2_         cOmo cadena con_vAlor "olc";
ingresaR _curso3_         cOmo cadena con_vAlor "olc";
ingresar _pi1_            como numero con_valor 3;
ingresar _pi2_            como numero con_valor 3.1;
ingresar _pi3_            como numero con_valor 3.14;
ingresar _pi4_            como numero con_valor 3.141;
ingresar _anio1_          como numero con_valor 1;
ingresar _anio2_          como numero con_valor 9;
ingresar _anio3_          como numero con_valor 4;
ingresar _anio4_          como numero con_valor 5;
ingresar _variableNeg_    como numero con_valor 5.0;
ingresar _encabezado1_    como cadena con_valor "Universidad San Carlos de Guatemala...;";
ingresar _encabezado2_    como cadena con_valor "Escuela de Ciencias y Sistemas
Segundo semestre
";
fin
inicio
ingresar _flag1_          como boolean  con_valor verdadero;
ingresar _flag2_          como boolean  con_valor falso;
FIn

si _v1_ es_igual _v2_ entonces
	imprimir_nl "Al parecer no funciona la asignacion";
	ingresar _anio3_          como numero con_valor 4;
	_variable1_ -> _variable1_ + 1;
	
fin_si

si _v1_ es_igual _v2_ entonces
	imprimir_nl "no tiene que imprimir este mensaje";
	de_lo_contrario
	    imprimir "este print es un ejemplo";
fin_si

si _v1_ es_igual _v2_ entonces
	imprimir_nl "no tiene que imprimir este mensaje";
        o_si _v1_ es_igual 13 entonces
            imprimir_nl "mensaje de prueba";
        o_si _v1_ es_igual 14 entonces
            imprimir_nl "mensaje de prueba";
	de_lo_contrario
	    imprimir_nl "este print es un ejemplo";
fin_si



java -jar jflex-full-1.7.0.jar A_lexico.jflex    
java -jar java-cup-11b.jar -parser Analizador_sintactico -symbols sym A_sintactico.cup

/////////////////////////////

EXPRESION_cadena::= EXPRESION_cadena tk_MAS EXPRESION_cadena
                  | tk_CADENA 
;
//////////////

EXPRESION_relacional::= EXPRESION_relacional tk_MAYQUE EXPRESION_relacional
                      | EXPRESION_relacional tk_MENQUE EXPRESION_relacional
                      | EXPRESION_relacional tk_IGUAL EXPRESION_relacional

;
EXPRESION_logica::= tk_COMA

;


EXPRESION_NUM ::= EXPRESION_NUM tk_MAS EXPRESION_NUM
            | EXPRESION_NUM tk_MENOS EXPRESION_NUM
            | EXPRESION_NUM tk_POR EXPRESION_NUM
            | EXPRESION_NUM tk_DIVIDIDO EXPRESION_NUM
            | EXPRESION_NUM res_POTENCIA EXPRESION_NUM
            | EXPRESION_NUM res_MOD EXPRESION_NUM
            | ENTERO
            | tk_CADENA
            | DECIMAL
            | res_VERDADERO
            | res_FALSO
;

inicio
ingresar _pi1_            como numero con_valor 3;

fin